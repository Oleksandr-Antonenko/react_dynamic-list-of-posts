{"version":3,"sources":["components/PostItem.tsx","components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","api/comments.ts","components/CommentItem.tsx","components/PostDetails.tsx","components/UserItem.tsx","components/UserSelector.tsx","hooks/useClickOutside.ts","api/users.ts","App.tsx","api/posts.ts","index.tsx"],"names":["PostItem","post","currentPost","setCurrentPost","id","title","isCurrent","className","type","onClick","PostsList","posts","map","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","json","Error","client","NewCommentForm","postId","setIsError","addNewComment","useState","name","setName","email","setEmail","setBody","nameError","setNameError","emailError","setEmailError","bodyError","setBodyError","isLoading","setIsLoading","handleAddNewComment","comment","handleChange","event","target","value","onSubmit","preventDefault","catch","finally","htmlFor","placeholder","classNames","onChange","CommentItem","deleteCurrentComment","href","deleteComment","PostDetails","isError","isWriting","setIsWriting","comments","setComments","useEffect","prevState","filter","item","length","UserItem","user","setIsOpened","setCurrentUser","UserSelector","currentUser","initialIsVisible","isOpened","ref","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","useClickOutside","users","setUsers","role","App","setPosts","userId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7ad131c.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  post: Post,\n  currentPost: Post | null,\n  setCurrentPost: (post: Post | null) => void,\n};\n\nexport const PostItem: React.FC<Props> = ({\n  post,\n  currentPost,\n  setCurrentPost,\n}) => {\n  const { id, title } = post;\n  const isCurrent = currentPost?.id === id;\n\n  const handleOpenDetails = () => {\n    setCurrentPost(post);\n  };\n\n  const handleCloseDetails = () => {\n    setCurrentPost(null);\n  };\n\n  return (\n    <tr data-cy=\"Post\">\n      <td data-cy=\"PostId\">{id}</td>\n\n      <td data-cy=\"PostTitle\">\n        {title}\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        {isCurrent ? (\n          <button\n            type=\"button\"\n            data-cy=\"PostButton\"\n            className=\"button is-link\"\n            onClick={handleCloseDetails}\n          >\n            Close\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            data-cy=\"PostButton\"\n            className=\"button is-link is-light\"\n            onClick={handleOpenDetails}\n          >\n            Open\n          </button>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Post } from '../types/Post';\nimport { PostItem } from './PostItem';\n\ntype Props = {\n  posts: Post[],\n  currentPost: Post | null,\n  setCurrentPost: (post: Post | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  currentPost,\n  setCurrentPost,\n}) => (\n  <div data-cy=\"PostsList\">\n    <p className=\"title\">Posts:</p>\n\n    <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n      <thead>\n        <tr className=\"has-background-link-light\">\n          <th>#</th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {posts.map(post => (\n          <PostItem\n            post={post}\n            key={post.id}\n            currentPost={currentPost}\n            setCurrentPost={setCurrentPost}\n          />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { addComment } from '../api/comments';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  postId: number,\n  setIsError: (value: boolean) => void,\n  addNewComment: (comment: Comment) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  setIsError,\n  addNewComment,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [bodyError, setBodyError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleAddNewComment = (comment: Comment) => {\n    addNewComment(comment);\n    setBody('');\n  };\n\n  const handleClearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n    setNameError(false);\n    setEmailError(false);\n    setBodyError(false);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsError(false);\n\n    if (!name || !email || !body) {\n      if (!name) {\n        setNameError(true);\n      }\n\n      if (!email) {\n        setEmailError(true);\n      }\n\n      if (!body) {\n        setBodyError(true);\n      }\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    addComment({\n      postId, name, email, body,\n    })\n      .then(handleAddNewComment)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        setNameError(false);\n        break;\n\n      case 'email':\n        setEmail(event.target.value);\n        setEmailError(false);\n        break;\n\n      case 'body':\n        setBody(event.target.value);\n        setBodyError(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleOnSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', {\n              'is-danger': nameError,\n            })}\n            value={name}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {nameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {nameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', {\n              'is-danger': emailError,\n            })}\n            value={email}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {emailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {emailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', {\n              'is-danger': bodyError,\n            })}\n            value={body}\n            onChange={handleChange}\n          />\n        </div>\n\n        {bodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link', {\n              'is-loading': isLoading,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={handleClearForm}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Comment } from '../types/Comment';\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const deleteComment = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n\nexport const addComment = (comment: Partial<Comment>) => {\n  return client.post<Comment>('/comments', comment);\n};\n","import React from 'react';\nimport { Comment } from '../types/Comment';\nimport { deleteComment } from '../api/comments';\n\ntype Props = {\n  comment: Comment,\n  setIsError: (value: boolean) => void,\n  deleteCurrentComment: (id: number) => void,\n};\n\nexport const CommentItem: React.FC<Props> = ({\n  comment,\n  setIsError,\n  deleteCurrentComment,\n}) => {\n  const {\n    id,\n    name,\n    email,\n    body,\n  } = comment;\n\n  const handleDelete = () => {\n    setIsError(false);\n    deleteComment(id)\n      .then(() => deleteCurrentComment(id))\n      .catch(() => setIsError(true));\n  };\n\n  return (\n    <article\n      className=\"message is-small\"\n      data-cy=\"Comment\"\n    >\n      <div className=\"message-header\">\n        <a href={`mailto:${email}`} data-cy=\"CommentAuthor\">\n          {name}\n        </a>\n        <button\n          data-cy=\"CommentDelete\"\n          type=\"button\"\n          className=\"delete is-small\"\n          aria-label=\"delete\"\n          onClick={handleDelete}\n        >\n          delete button\n        </button>\n      </div>\n\n      <div className=\"message-body\" data-cy=\"CommentBody\">\n        {body}\n      </div>\n    </article>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { getComments } from '../api/comments';\nimport { CommentItem } from './CommentItem';\n\ntype Props = {\n  currentPost: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ currentPost }) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isWriting, setIsWriting] = useState(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n\n  useEffect(() => {\n    setIsWriting(false);\n    setIsLoading(true);\n    getComments(currentPost.id)\n      .then(setComments)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, [currentPost]);\n\n  const handleSetWriting = () => {\n    setIsWriting(true);\n  };\n\n  const addNewComment = (comment: Comment) => {\n    setComments(prevState => [...prevState, comment]);\n  };\n\n  const deleteCurrentComment = (id: number) => {\n    setComments(prevState => prevState.filter(item => {\n      return item.id !== id;\n    }));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${currentPost.id}: ${currentPost.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {currentPost.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {isError && (\n                <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n                  Something went wrong\n                </div>\n              )}\n\n              {!comments.length ? (\n                <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                  No comments yet\n                </p>\n              ) : (\n                <>\n                  <p className=\"title is-4\">Comments:</p>\n\n                  {comments.map(comment => (\n                    <CommentItem\n                      key={comment.id}\n                      comment={comment}\n                      setIsError={setIsError}\n                      deleteCurrentComment={deleteCurrentComment}\n                    />\n                  ))}\n                </>\n              )}\n            </>\n          )}\n\n          {!isWriting && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={handleSetWriting}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isWriting && (\n          <NewCommentForm\n            postId={currentPost.id}\n            setIsError={setIsError}\n            addNewComment={addNewComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User,\n  setIsOpened: (value: boolean) => void,\n  setCurrentUser: (user: User) => void,\n};\n\nexport const UserItem: React.FC<Props> = ({\n  user,\n  setIsOpened,\n  setCurrentUser,\n}) => {\n  const { id, name } = user;\n\n  const handleSelectUser = () => {\n    setCurrentUser(user);\n    setIsOpened(false);\n  };\n\n  return (\n    <a\n      href={`#user-${id}`}\n      className=\"dropdown-item\"\n      onClick={handleSelectUser}\n    >\n      {name}\n    </a>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\nimport { getUsers } from '../api/users';\nimport useClickOutside from '../hooks/useClickOutside';\nimport { UserItem } from './UserItem';\n\ntype Props = {\n  currentUser: User | null,\n  setCurrentUser: (user: User) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  currentUser,\n  setCurrentUser,\n}) => {\n  const { ref, isOpened, setIsOpened } = useClickOutside(false);\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    getUsers().then(setUsers);\n  }, []);\n\n  const handleToggleOpenAction = () => {\n    setIsOpened(prevState => !prevState);\n  };\n\n  return (\n    <div\n      ref={ref}\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', {\n        'is-active': isOpened,\n      })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleToggleOpenAction}\n        >\n          <span>\n            {currentUser ? (\n              currentUser.name\n            ) : (\n              'Choose a user'\n            )}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      {isOpened && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {users.map(user => (\n              <UserItem\n                user={user}\n                key={user.id}\n                setIsOpened={setIsOpened}\n                setCurrentUser={setCurrentUser}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useClickOutside(initialIsVisible: boolean) {\n  const [isOpened, setIsOpened] = useState(initialIsVisible);\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleClickOutside = (event: React.MouseEvent) => {\n    if (ref.current && !ref.current.contains(event.target as Node)) {\n      setIsOpened(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click',\n      handleClickOutside as unknown as EventListener);\n\n    return () => {\n      document.removeEventListener('click',\n        handleClickOutside as unknown as EventListener);\n    };\n  }, []);\n\n  return { ref, isOpened, setIsOpened };\n}\n","import { client } from '../utils/fetchClient';\nimport { User } from '../types/User';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { getPosts } from './api/posts';\n\nexport const App: React.FC = () => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [currentPost, setCurrentPost] = useState<Post | null>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setIsLoading(true);\n      getPosts(currentUser.id)\n        .then(setPosts)\n        .catch(() => setIsError(true))\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentUser]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  currentUser={currentUser}\n                  setCurrentUser={setCurrentUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n\n                {!currentUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n                {isLoading ? (\n                  <Loader />\n                ) : (\n                  <>\n                    {isError && (\n                      <div\n                        className=\"notification is-danger\"\n                        data-cy=\"PostsLoadingError\"\n                      >\n                        Something went wrong!\n                      </div>\n                    )}\n\n                    {!posts.length && currentUser && (\n                      <div\n                        className=\"notification is-warning\"\n                        data-cy=\"NoPostsYet\"\n                      >\n                        No posts yet\n                      </div>\n                    )}\n\n                    {!!posts.length && (\n                      <PostsList\n                        posts={posts}\n                        currentPost={currentPost}\n                        setCurrentPost={setCurrentPost}\n                      />\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              {\n                'Sidebar--open': currentPost,\n              },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {currentPost && (\n                <PostDetails\n                  currentPost={currentPost}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Post } from '../types/Post';\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}